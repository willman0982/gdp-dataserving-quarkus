# Client Configuration
quarkus:
  application:
    name: gdp-dataserving-client
  http:
    port: 8080

  # OIDC Client Configuration
  oidc-client:
    auth-server-url: ${OIDC_AUTH_SERVER_URL:https://your-keycloak-server/auth/realms/your-realm}
    client-id: ${OIDC_CLIENT_ID:gdp-dataserving-client}
    credentials:
      secret: ${OIDC_CLIENT_SECRET:your-client-secret}
    grant:
      type: client_credentials
    token-path: /protocol/openid-connect/token

  # REST Client Configuration
  rest-client:
    "com.sc.gdp.dataserving.client.rest.DataRestClient":
      url: ${DATA_SERVER_URL:http://localhost:8082}
      scope: jakarta.inject.Singleton

  # GraphQL Client Configuration
  smallrye-graphql-client:
    "data-graphql-client":
      url: ${DATA_SERVER_GRAPHQL_URL:http://localhost:8082/graphql}

  # Logging Configuration
  log:
    level: INFO
    category:
      "com.sc.gdp": DEBUG
      "io.quarkus.oidc": DEBUG

# Development Profile
"%dev":
  quarkus:
    oidc-client:
      auth-server-url: http://localhost:8180/auth/realms/quarkus
      client-id: frontend-client
      credentials:
        secret: secret
    rest-client:
      "com.sc.gdp.dataserving.client.rest.DataRestClient":
        url: http://localhost:8082
    smallrye-graphql-client:
      "data-graphql-client":
        url: http://localhost:8082/graphql
    log:
      level: DEBUG

# Test Profile
"%test":
  quarkus:
    oidc-client:
      auth-server-url: http://localhost:8180/auth/realms/quarkus
      client-id: frontend-client
      credentials:
        secret: secret
    rest-client:
      "com.sc.gdp.dataserving.client.rest.DataRestClient":
        url: http://localhost:8082
    smallrye-graphql-client:
      "data-graphql-client":
        url: http://localhost:8082/graphql