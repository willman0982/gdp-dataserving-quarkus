# Server Configuration
quarkus.application.name=gdp-dataserving-server
quarkus.http.port=8082
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=*

# OIDC Configuration
quarkus.oidc.auth-server-url=${OIDC_AUTH_SERVER_URL:https://your-keycloak-server/auth/realms/your-realm}
quarkus.oidc.client-id=${OIDC_CLIENT_ID:gdp-dataserving}
quarkus.oidc.credentials.secret=${OIDC_CLIENT_SECRET:your-client-secret}
quarkus.oidc.application-type=service
quarkus.oidc.token.issuer=${OIDC_TOKEN_ISSUER:https://your-keycloak-server/auth/realms/your-realm}
quarkus.oidc.token.audience=${OIDC_TOKEN_AUDIENCE:gdp-dataserving}

# Security Configuration
quarkus.security.jaxrs.deny-unannotated-endpoints=false

# Database Configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DB_USERNAME:gdp_user}
quarkus.datasource.password=${DB_PASSWORD:gdp_password}
quarkus.datasource.jdbc.url=${DB_URL:jdbc:postgresql://localhost:5432/gdp_dataserving}
quarkus.datasource.jdbc.max-size=16
quarkus.datasource.jdbc.min-size=2

# Hibernate Configuration
quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.log.sql=false
quarkus.hibernate-orm.log.format-sql=true
quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect

# Flyway Configuration
quarkus.flyway.migrate-at-start=true
quarkus.flyway.locations=classpath:db/migration
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.baseline-version=0

# GraphQL Configuration
quarkus.smallrye-graphql.ui.enable=true
quarkus.smallrye-graphql.root-path=/graphql
quarkus.smallrye-graphql.events.enabled=true

# OpenAPI/Swagger Configuration
quarkus.smallrye-openapi.info-title=GDP Data Serving API
quarkus.smallrye-openapi.info-version=1.0.0
quarkus.smallrye-openapi.info-description=REST API for GDP Data Serving with S3 file management
quarkus.smallrye-openapi.info-contact-email=support@sc.com
quarkus.smallrye-openapi.info-license-name=MIT
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/swagger-ui

# Logging Configuration
quarkus.log.level=INFO
quarkus.log.category."com.sc.gdp".level=DEBUG
quarkus.log.category."io.quarkus.oidc".level=DEBUG

# S3 Configuration
# Default S3 Configuration
s3.endpoint-url=${S3_ENDPOINT_URL:http://localhost:9000}
s3.access-key=${S3_ACCESS_KEY:minioadmin}
s3.secret-key=${S3_SECRET_KEY:minioadmin}
s3.bucket-name=${S3_BUCKET_NAME:gdp-dataserving}
s3.region=${S3_REGION:us-east-1}
s3.path-style-access=${S3_PATH_STYLE_ACCESS:true}
s3.signed-url-duration-minutes=${S3_SIGNED_URL_DURATION_MINUTES:60}
s3.connection-timeout-ms=${S3_CONNECTION_TIMEOUT_MS:30000}
s3.socket-timeout-ms=${S3_SOCKET_TIMEOUT_MS:30000}
s3.max-retry-attempts=${S3_MAX_RETRY_ATTEMPTS:3}

# Multiple S3 Bucket Configurations
# To configure additional S3 buckets, use the pattern: s3.buckets.[bucket-id].[property]
# Each bucket can have its own endpoint, credentials, and settings
# If a property is not specified for a bucket, it will inherit from the default configuration

# Example: Reports bucket with different credentials
s3.buckets.reports.name=${S3_REPORTS_BUCKET_NAME:gdp-reports}
s3.buckets.reports.endpoint-url=${S3_REPORTS_ENDPOINT_URL:http://localhost:9000}
s3.buckets.reports.region=${S3_REPORTS_REGION:us-east-1}
s3.buckets.reports.access-key=${S3_REPORTS_ACCESS_KEY:reports-user}
s3.buckets.reports.secret-key=${S3_REPORTS_SECRET_KEY:reports-password}
s3.buckets.reports.path-style-access=${S3_REPORTS_PATH_STYLE_ACCESS:true}

# Example: Archives bucket on different S3 provider
s3.buckets.archives.name=${S3_ARCHIVES_BUCKET_NAME:gdp-archives}
s3.buckets.archives.endpoint-url=${S3_ARCHIVES_ENDPOINT_URL:https://s3.amazonaws.com}
s3.buckets.archives.region=${S3_ARCHIVES_REGION:us-west-2}
s3.buckets.archives.access-key=${S3_ARCHIVES_ACCESS_KEY:AKIAIOSFODNN7EXAMPLE}
s3.buckets.archives.secret-key=${S3_ARCHIVES_SECRET_KEY:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY}
s3.buckets.archives.path-style-access=${S3_ARCHIVES_PATH_STYLE_ACCESS:false}

# Example: Backup bucket with minimal configuration (inherits most settings from default)
# s3.buckets.backup.name=${S3_BACKUP_BUCKET_NAME:gdp-backup}

# Usage in REST API:
# - Default bucket: GET /s3/download/presigned?key=file.pdf
# - Specific bucket: GET /s3/download/presigned?key=file.pdf&bucketId=reports
# - List buckets: GET /s3/buckets

# Development Profile
%dev.quarkus.datasource.db-kind=h2
%dev.quarkus.datasource.username=sa
%dev.quarkus.datasource.password=
%dev.quarkus.datasource.jdbc.url=jdbc:h2:mem:gdp_dev;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
%dev.quarkus.datasource.jdbc.max-size=8
%dev.quarkus.datasource.jdbc.min-size=1
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%dev.quarkus.hibernate-orm.log.sql=true
%dev.quarkus.hibernate-orm.log.format-sql=true
%dev.quarkus.flyway.migrate-at-start=false
%dev.quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/quarkus
%dev.quarkus.oidc.client-id=backend-service
%dev.quarkus.oidc.credentials.secret=secret
%dev.quarkus.log.level=DEBUG

# Test Profile
%test.quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/quarkus
%test.quarkus.oidc.client-id=backend-service
%test.quarkus.oidc.credentials.secret=secret